{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","forhtml","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","filter","element","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","console","log","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e8836b90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\" ;\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"btn-group \" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n            <button type=\"button\" className=\"btn btn-danger mx-1\" onClick={()=>{props.toggleMode('danger')}}>Red</button>\r\n            <button type=\"button\" className=\"btn btn-warning mx-1\" onClick={()=>{props.toggleMode('warning')}}>yellow</button>\r\n            <button type=\"button\" className=\"btn btn-success mx-1\" onClick={()=>{props.toggleMode('success')}}>green</button>\r\n            <button type=\"button\" className=\"btn btn-info mx-1\" onClick={()=>{props.toggleMode('info')}}>skyblue</button>\r\n          </div>\r\n          <div className=\"form-check form-switch mx-2\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={()=>{props.toggleMode(null)}}\r\n            />\r\n            <label className={`form-check-label text-${props.mode ==='light'?'dark':'light'}`} forhtml=\"flexSwitchCheckDefault\">\r\n              Enabel Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n//it is use for default props\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handelUpClick = () => {\r\n    //console.log(\"uppercase was clicked\"+ text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handelclearClick = () => {\r\n    //console.log(\"uppercase was clicked\"+ text);\r\n    let newText =\" \";\r\n    setText(newText);\r\n    props.showAlert(\"Text is clear now you can type new text!\", \"success\");\r\n  };\r\n  const handelLoClick = () => {\r\n    //console.log(\"uppercase was clicked\"+ text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n  const handelOnChange = (event) => {\r\n    //console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n  const handelrevClick = (event) => {\r\n    let newText = text.split('').reverse().join('')\r\n    setText(newText);\r\n    props.showAlert(\"Text Converted to Reverse!\", \"success\");\r\n  };\r\n  const handelcopyClick = (event) => {\r\n    var text = document.getElementById(\"myBox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n    props.showAlert(\"Copy to clipboard!\", \"success\");\r\n  \r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handelOnChange}\r\n            style={{backgroundColor: props.mode ==='dark'?'grey':'white', color: props.mode ==='dark'?'white':'black'}}\r\n            id=\"myBox\"\r\n            rows=\"5\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-2 my-1\" onClick={handelUpClick}>\r\n            Convert to UpperCase\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handelLoClick}>\r\n            Convert to LowerCase\r\n          </button>\r\n          \r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handelrevClick}>\r\n            Reverse\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handelcopyClick}>\r\n            copy to clipboard\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-1\" onClick={handelclearClick}>\r\n            clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n        <h1 >Your Text Summary</h1>\r\n        <p>\r\n          {\" \"}\r\n          {text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters with space\r\n          \r\n        </p>\r\n       \r\n        <p> {0.08 * text.split(\" \").length} Minutes read</p>\r\n        <h3>preview</h3>\r\n        <p>{text.length>0?text:\"Enter something in textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n\r\n    }\r\n  return (\r\n      props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n//import About from \"./components/About\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n//import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light') // weather dark mode is enabel or not  \n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  } \nconst removeBodyClasses=()=>{\n  document.body.classList.remove('bg-light')\n  document.body.classList.remove('bg-dark')\n  document.body.classList.remove('bg-warning')\n  document.body.classList.remove('bg-danger')\n  document.body.classList.remove('bg-success')\n  document.body.classList.remove('bg-info')\n}\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add('bg-'+cls)\n    if (mode === 'light'){\n      setMode ('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - dark Mode'\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n    \n    \n  } \n  return (\n    <>\n     \n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Us\"/> */}\n     {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode ={mode} toggleMode={toggleMode}/>\n        <Alert alert = {alert}/>\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n              {/* <Route exact path=\"/about\">\n                <About />\n              </Route> */}\n              {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading =\"Enter the the text to analyze below\"/>\n              {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n       </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}